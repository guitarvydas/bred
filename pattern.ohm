
Run {

  top = main+
  main = spaces matchLR spaces
  char =  ~space ~literal ~bracket ~connector any

  matchLR =
    | item+ "⇉" item+ -- connected
    | space+ -- atLeastOneSpace
    | patternLR -- pattern
    | "(" matchLR* ")" -- paren
    | "{" matchLR* "}" -- brace
    | "[" matchLR* "]" -- squarebracket
    | "<" matchLR* ">" -- anglebracket
    | "❲" matchLR* "❳" -- namebracket
    | "«" matchLR* "»" -- varbracket
    | "⟨" matchLR* "⟩" -- dtypebracket
    | "⟪" matchLR* "⟫" -- messagebracket
    | "⎨" matchLR* "⎬" -- connectionbracket
    | "⎡" matchLR* "⎤" -- sender
    | "⎣" matchLR* "⎦" -- receiver
    | char+ -- char


  bracket =
    | "(" | ")" | "{" | "}" | "[" | "]" | "<" | ">"
    |  "❲" |  "❳" |  " | " | "⟨" |  "⟩" | "⟪" | "⟫"
    | "⎨" | "⎬" | "⎡"| "⎤" | "⎣" | "⎦"

  connector =
    | "⇉"

  item = spaces matchLR spaces

patternLR =  "["  item  item  "]"  "⇉"  "["  item  item  "]" 





literal =  | "["  | item  | item  | "]"  | "⇉"  | "["  | item  | item  | "]" 
}

