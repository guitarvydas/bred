Bred {
  main [spaces1 firstPattern spaces2 secondPattern spaces3] = ‛
NestingGrammar {

  topLevel [items+] = \‛\«items\»\’
  
  item_pattern [p] = \‛\«p\»\’
  item_container [c] = \‛\«c\»\’
  item_leaf [L] = \‛\«L\»\’
  item_whitespace [s] = \‛\«s\»\’

  iteminpattern_container [c] = \‛\«c\»\’
  iteminpattern_leaf [uc+] = \‛\«uc\»\’

  leaf [sp1* c1+ sp2* c2*] = ‛\«sp1»\«c1»\«sp2»\«c2»\’
  container [b] = \‛\«b\»\’

  uninterestingChar [c] = \‛\«c\»\’

  bracket [c] = \‛\«c\»\’
  // bracketed [x] ... handled implicitly by Ohm-JS
  brack [lb item+ rb] = \‛\«lb\»\«item\»\«rb\»\’
  verbatim [lq cs* rq] = \‛\«lq\»\«cs\»\«rq\»\’
  name [n] = \‛\«n\»\’
  bracketedName [lb cs+ rb] = \‛❲\«cs\»❳\’
  classicName [nFirst nRest*] = \‛\«nFirst\»\«nRest\»\’
  nameFirst [c] = \‛\«c\»\’
  nameRest [c] = \‛\«c\»\’

  literal [c] = \‛\«c\»\’
  pattern [«firstPattern»] = «secondPattern»
}
’

  firstPattern [lq firstitem+ rq] = ‛«firstitem»’
  firstitem_variable [lq name rq] = ‛«name» ’
  firstitem_dontcare [c] = ‛_«gensym ("x")» ’
  firstitem_space [c] = ‛_«gensym ("s")» ’
  firstitem_character [c] = ‛_«gensym ("k")» ’
  secondPattern [lq seconditem+ rq] = ‛«lq»«seconditem»«rq»’
  seconditem_variable [lq name rq] = ‛\««name»\»’
  seconditem_space [s] = ‛«s»’
  seconditem_character [c] = ‛«c»’

  name [nameFirst nameRest*] = ‛«nameFirst»«nameRest»’
  nameFirst [letter] = ‛«letter»’
  nameRest [alnum] = ‛«alnum»’
}

