Bred {
  main [spaces1 firstPattern spaces2 secondPattern spaces3] = ‛
Run {
  top [main+] = \‛\«main\»\’
  main [spaces1 patternLR spaces2] = \‛\«spaces1\»\«patternLR\»\«spaces2\»\’
  char [c] = \‛\«c\»\’

  matchLR_atLeastOneSpace [sp+] = \‛\«sp\»\’
  matchLR_pattern [lr] = \‛\«lr\»\’
  matchLR_char [char+] = \‛\«char\»\’
  matchLR_paren [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_brace [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_squarebracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_anglebracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_namebracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_varbracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_dtypebracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  matchLR_messagebracket [lb m* rb] = \‛\«lb\»\«m\»\«rb\»\’
  bracket [c] = \‛\«c\»\’
  item [spaces1 matchLR spaces2] = \‛\«spaces1\»\«matchLR\»\«spaces2\»\’
  literal [c] =  \‛\«c\»\’
  
  «spaces1»«firstPattern»«spaces2»«secondPattern»«spaces3»
}
’

  firstPattern [lq firstitem+ rq] = ‛patternLR [«firstitem»] = ’
  firstitem_variable [lq name rq] = ‛ «name» ’
  firstitem_space [c] = ‛’
  firstitem_characters [c+] = ‛ «gensym ("ignore")» ’
  secondPattern [lq seconditem+ rq] = ‛«lq»«seconditem»«rq»’
  seconditem_variable [lq name rq] = ‛ \««name»\»’
  seconditem_space [s] = ‛’
  seconditem_characters [c+] = ‛«c»’

  name [nameFirst nameRest*] = ‛«nameFirst»«nameRest»’
  nameFirst [letter] = ‛«letter»’
  nameRest [alnum] = ‛«alnum»’
}

