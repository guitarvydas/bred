
NestingGrammar {

  topLevel [items+] = ‛«items»’
  
  item_pattern [p] = ‛«p»’
  item_variable [v] = ‛«v»’
  item_bracketed [b] = ‛«b»’
  item_spaces [s] = ‛«s»’
  item_chars [c] = ‛«c»’

  runOfSpaces [s+] = ‛«s»’
  runOfUninterestingChars [cs+] = ‛«cs»’
  uninterestingChar [c] = ‛«c»’

  variable [lb name rb] = ‛\««name»\»’
  bracket [c] = ‛«c»’
  // bracketed [x] ... handled implicitly by Ohm-JS
  brack [lb item+ rb] = ‛«item»’
  name [n] = ‛«n»’
  bracketedName [lb cs+ rb] = ‛❲«cs»❳’
  classicName [nFirst nRest*] = ‛«nFirst»«nRest»’
  nameFirst [c] = ‛«c»’
  nameRest [c] = ‛«c»’

  literal [c] = ‛«c»’
  pattern [k1 p " " d " " s " " m k2 ] = 

