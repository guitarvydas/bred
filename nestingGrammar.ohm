NestingGrammar {

// test: a b c ( d e f )
// goal: 
//   ⎨in ⇓ ❲leaf 1❳ in⎬
//   ⎨in ⇑ ❲leaf 1❳ in⎬
//   ⎨❲leaf 1❳ in ⇒ ❲leaf 2❳ in⎬
//   ⎨in ⤻ out⎬

  topLevel = 
    | runOfNonBrackets bracketed topLevel -- nbb
    | bracketed                            -- b
    | runOfNonBrackets                     -- nb
    |                                      -- empty

  runOfNonBrackets = (~bracket any)+
  
  bracketed = 
    | "(" spaces itemsWithSpaces ")" spaces -- ii1a
    | "(" spaces ")" spaces -- ii1b
    | "(" ")" spaces -- ii1c

  itemsWithSpaces = itemWithSpaces+
  itemWithSpaces = item spaces

  item =
    | bracketed
    | runOfUninterestingChars

  runOfUninterestingChars = uninterestingChar+
  uninterestingChar = ~space ~bracket ~connector any

  innerItem =
    | bracketed
    | runOfUninterestingChars
    
  innerItems = spaces (innerItem spaces)*

  bracket =
    | "(" | ")"

  connector =
    | "⇉" | "⇓" | "⇑" | "⇒" | "⤻"

}
